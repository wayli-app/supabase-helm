{{- if .Values.functions.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supabase.fullname" . }}-functions
  namespace: {{ include "supabase.namespace" . }}
  labels:
    {{- include "supabase.labels" . | nindent 4 }}
    app.kubernetes.io/component: functions
    supabaseComponent: {{ include "supabase.fullname" . }}-functions
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "supabase.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: functions
      supabaseComponent: {{ include "supabase.fullname" . }}-functions
  template:
    metadata:
      labels:
        {{- include "supabase.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: functions
        supabaseComponent: {{ include "supabase.fullname" . }}-functions
    spec:
      {{- if .Values.functions.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.functions.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.functions.serviceAccount.create }}
      serviceAccountName: {{ .Values.functions.serviceAccount.name | default (printf "%s-functions" (include "supabase.fullname" .)) }}
      {{- end }}
      {{- with .Values.functions.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.functions.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.functions.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.functions.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.functions.image.repository }}:{{ .Values.functions.image.tag }}"
          imagePullPolicy: {{ .Values.functions.image.pullPolicy }}
          args: ["start", "--main-service", {{ .Values.functions.config.mainService | quote }}]
          {{- with .Values.functions.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.functions.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.supabase.existingSecret | default (printf "%s-secret" (include "supabase.fullname" .)) }}
                  key: {{ .Values.global.supabase.secretKeys.jwtSecret }}
            - name: SUPABASE_URL
              value: "http://{{ include "supabase.fullname" . }}-kong:{{ .Values.kong.service.port }}"
            - name: SUPABASE_ANON_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.supabase.existingSecret | default (printf "%s-secret" (include "supabase.fullname" .)) }}
                  key: {{ .Values.global.supabase.secretKeys.anonKey }}
            - name: SUPABASE_SERVICE_ROLE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.supabase.existingSecret | default (printf "%s-secret" (include "supabase.fullname" .)) }}
                  key: {{ .Values.global.supabase.secretKeys.serviceRoleKey }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.postgres.existingSecret | default (printf "%s-db-secret" (include "supabase.fullname" .)) }}
                  key: {{ .Values.db.postgres.secretKeys.userPasswordKey | default "password" }}
            - name: SUPABASE_DB_URL
              value: "postgresql://{{ .Values.functions.config.dbUser }}:$(DB_PASSWORD)@{{- if .Values.db.pgbouncer.enabled }}{{ .Values.db.pgbouncer.service.name | default (printf "%s-pgbouncer" (include "supabase.fullname" .)) }}{{- if .Values.db.pgbouncer.service.namespace }}.{{ .Values.db.pgbouncer.service.namespace }}{{- end }}:{{ .Values.db.pgbouncer.service.port | default "5432" }}{{- else }}{{ printf "%s-db" (include "supabase.fullname" .) }}{{- end }}/postgres"
            - name: VERIFY_JWT
              value: {{ .Values.functions.config.verifyJwt | quote }}
            {{- with .Values.functions.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.functions.service.port }}
              protocol: TCP
          volumeMounts:
            - name: functions-main
              mountPath: /home/supabase/functions
            {{- if not .Values.functions.extraVolumeMounts }}
            - name: functions-config
              subPath: index.ts
              mountPath: /home/deno/functions/main/index.ts
            - name: functions-config
              mountPath: /home/deno/functions/hello/index.ts
              subPath: hello_index.ts
            {{- end }}
            {{- with .Values.functions.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            requests:
              cpu: {{ .Values.functions.resources.requests.cpu }}
              memory: {{ .Values.functions.resources.requests.memory }}
            limits:
              cpu: {{ .Values.functions.resources.limits.cpu }}
              memory: {{ .Values.functions.resources.limits.memory }}
      volumes:
        - name: functions
          {{- if .Values.functions.persistence.enabled }}
          {{- if .Values.functions.persistence.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.functions.persistence.existingClaim }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "supabase.fullname" . }}-functions
          {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if not .Values.functions.extraVolumes }}
        - name: functions-main
          emptyDir: {}
        - name: functions-config
          configMap:
            name: {{ include "supabase.fullname" . }}-functions-config
        {{- end }}
        {{- with .Values.functions.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        # Mount user functions
        # - name: my_functions
        #   secret:
        #     defaultMode: 733
        #     secretName: my_secret
        #     items:
        #     - key: my_secret.ts
        #       path: name_of_file_in_container.ts
{{- end }}